server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    access_log  /var/log/nginx/host.access.log  main;
    error_log  /var/log/nginx/error.log  error;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

     location /api {
            rewrite  ^.+api/?(.*)$ /$1 break;
            proxy_pass  http://192.168.0.222:18099;    #node api server 即需要代理的IP地址
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# server {
#         listen       80; # 监听端口
#         server_name  localhost; # 域名可以有多个，用空格隔开

#         #access_log  logs/host.access.log  main;
#         client_max_body_size 20m; 
#         client_body_buffer_size 128k;

#         location / {
#             try_files $uri $uri/ =404; # 此处的 @router 实际上是引用下面的转发，否则在 Vue 路由刷新时可能会抛出 404
#             # try_files $uri $uri/ /index.html; # 此处的 @router 实际上是引用下面的转发，否则在 Vue 路由刷新时可能会抛出 404
#             # try_files $uri $uri/ /D:/dist/index.html; # 此处的 @router 实际上是引用下面的转发，否则在 Vue 路由刷新时可能会抛出 404
#         }

#         location /api {
#             rewrite  ^.+api/?(.*)$ /$1 break;
#             proxy_pass  http://192.168.0.222:18099;    #node api server 即需要代理的IP地址
#             proxy_redirect off;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#         # redirect server error pages to the static page /50x.html
#         #将服务器错误页面重定向到静态页面/50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }
#     }